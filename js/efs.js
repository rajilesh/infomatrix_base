'use strict';const _0x531d2f=_0x75e4;function _0x1382(){const _0xc06ba3=['pageY','2608Imctsb','getShaderParameter','COLOR_BUFFER_BIT','\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20sampler2D;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uTarget;\x0a\x20\x20\x20\x20uniform\x20float\x20aspectRatio;\x0a\x20\x20\x20\x20uniform\x20vec3\x20color;\x0a\x20\x20\x20\x20uniform\x20vec2\x20point;\x0a\x20\x20\x20\x20uniform\x20float\x20radius;\x0a\x0a\x20\x20\x20\x20void\x20main\x20()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20p\x20=\x20vUv\x20-\x20point.xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20p.x\x20*=\x20aspectRatio;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20splat\x20=\x20exp(-dot(p,\x20p)\x20/\x20radius)\x20*\x20color;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20base\x20=\x20texture2D(uTarget,\x20vUv).xyz;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(base\x20+\x20splat,\x201.0);\x0a\x20\x20\x20\x20}\x0a','ARRAY_BUFFER','uniforms','uSource','createShader','createFramebuffer','drawingBufferHeight','CURL','swap','webgl','3959004lQdyMB','207xDELUz','COLOR_ATTACHMENT0','uniform3f','LINEAR','FLOAT','COMPILE_STATUS','FRAMEBUFFER','PRESSURE_ITERATIONS','min','804hpakKD','pageX','DENSITY_DISSIPATION','useProgram','radius','uniform1f','formatRG','uTexture','LINK_STATUS','identifier','HALF_FLOAT_OES','now','getElementById','STATIC_DRAW','experimental-webgl','addEventListener','read','EXT_color_buffer_float','enableVertexAttribArray','texImage2D','createBuffer','preventDefault','CLAMP_TO_EDGE','clientHeight','createProgram','139302dsbJlr','offsetX','format','length','clear','231CeWwtF','attachShader','clearColor','FRAGMENT_SHADER','uCurl','NEAREST','point','TEXTURE0','moved','name','bindFramebuffer','OES_texture_half_float_linear','TEXTURE_WRAP_T','framebufferTexture2D','getUniformLocation','uniform1i','createTexture','viewport','height','compileShader','bindTexture','\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20sampler2D;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uTexture;\x0a\x20\x20\x20\x20uniform\x20float\x20value;\x0a\x0a\x20\x20\x20\x20void\x20main\x20()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20value\x20*\x20texture2D(uTexture,\x20vUv);\x0a\x20\x20\x20\x20}\x0a','clientWidth','vertexAttribPointer','TEXTURE_2D','bind','drawingBufferWidth','program','webgl2','\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20sampler2D;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20varying\x20vec2\x20vL;\x0a\x20\x20\x20\x20varying\x20vec2\x20vR;\x0a\x20\x20\x20\x20varying\x20vec2\x20vT;\x0a\x20\x20\x20\x20varying\x20vec2\x20vB;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uVelocity;\x0a\x0a\x20\x20\x20\x20void\x20main\x20()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20L\x20=\x20texture2D(uVelocity,\x20vL).y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20R\x20=\x20texture2D(uVelocity,\x20vR).y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20T\x20=\x20texture2D(uVelocity,\x20vT).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20B\x20=\x20texture2D(uVelocity,\x20vB).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20vorticity\x20=\x20R\x20-\x20L\x20-\x20T\x20+\x20B;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(vorticity,\x200.0,\x200.0,\x201.0);\x0a\x20\x20\x20\x20}\x0a','touchend','canvas_efs','462602PhEoKR','offsetY','touchstart','color','width','uVelocity','uTarget','104304zwPbcp','formatRGBA','changedTouches','1176Ciojei','getProgramParameter','getProgramInfoLog','TEXTURE_WRAP_S','VERTEX_SHADER','\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20sampler2D;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20varying\x20vec2\x20vT;\x0a\x20\x20\x20\x20varying\x20vec2\x20vB;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uVelocity;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uCurl;\x0a\x20\x20\x20\x20uniform\x20float\x20curl;\x0a\x20\x20\x20\x20uniform\x20float\x20dt;\x0a\x0a\x20\x20\x20\x20void\x20main\x20()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20T\x20=\x20texture2D(uCurl,\x20vT).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20B\x20=\x20texture2D(uCurl,\x20vB).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20C\x20=\x20texture2D(uCurl,\x20vUv).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20force\x20=\x20vec2(abs(T)\x20-\x20abs(B),\x200.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20force\x20*=\x201.0\x20/\x20length(force\x20+\x200.00001)\x20*\x20curl\x20*\x20C;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20vel\x20=\x20texture2D(uVelocity,\x20vUv).xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(vel\x20+\x20force\x20*\x20dt,\x200.0,\x201.0);\x0a\x20\x20\x20\x20}\x0a','uniform2f','random','getShaderInfoLog','uPressure','52730LLDnSm','1639HLvHIb','getActiveUniform','formatR','down','SPLAT_RADIUS','activeTexture','halfFloatTexType','mousemove','pop','R16F','internalFormat','HALF_FLOAT','OES_texture_float_linear','uDivergence','TEXTURE_MAG_FILTER','touchmove','targetTouches','bufferData','value','ELEMENT_ARRAY_BUFFER','RG16F','texParameteri','supportLinearFiltering','\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20sampler2D;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20varying\x20vec2\x20vL;\x0a\x20\x20\x20\x20varying\x20vec2\x20vR;\x0a\x20\x20\x20\x20varying\x20vec2\x20vT;\x0a\x20\x20\x20\x20varying\x20vec2\x20vB;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uPressure;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uVelocity;\x0a\x0a\x20\x20\x20\x20vec2\x20boundary\x20(in\x20vec2\x20uv)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20uv\x20=\x20min(max(uv,\x200.0),\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20uv;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20main\x20()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20L\x20=\x20texture2D(uPressure,\x20boundary(vL)).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20R\x20=\x20texture2D(uPressure,\x20boundary(vR)).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20T\x20=\x20texture2D(uPressure,\x20boundary(vT)).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20B\x20=\x20texture2D(uPressure,\x20boundary(vB)).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20velocity\x20=\x20texture2D(uVelocity,\x20vUv).xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20velocity.xy\x20-=\x20vec2(R\x20-\x20L,\x20T\x20-\x20B);\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(velocity,\x200.0,\x201.0);\x0a\x20\x20\x20\x20}\x0a','getContext','texelSize','TEXTURE_MIN_FILTER','\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20sampler2D;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20varying\x20vec2\x20vL;\x0a\x20\x20\x20\x20varying\x20vec2\x20vR;\x0a\x20\x20\x20\x20varying\x20vec2\x20vT;\x0a\x20\x20\x20\x20varying\x20vec2\x20vB;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uVelocity;\x0a\x0a\x20\x20\x20\x20vec2\x20sampleVelocity\x20(in\x20vec2\x20uv)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20multiplier\x20=\x20vec2(1.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(uv.x\x20<\x200.0)\x20{\x20uv.x\x20=\x200.0;\x20multiplier.x\x20=\x20-1.0;\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(uv.x\x20>\x201.0)\x20{\x20uv.x\x20=\x201.0;\x20multiplier.x\x20=\x20-1.0;\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(uv.y\x20<\x200.0)\x20{\x20uv.y\x20=\x200.0;\x20multiplier.y\x20=\x20-1.0;\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(uv.y\x20>\x201.0)\x20{\x20uv.y\x20=\x201.0;\x20multiplier.y\x20=\x20-1.0;\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20multiplier\x20*\x20texture2D(uVelocity,\x20uv).xy;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20main\x20()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20L\x20=\x20sampleVelocity(vL).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20R\x20=\x20sampleVelocity(vR).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20T\x20=\x20sampleVelocity(vT).y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20B\x20=\x20sampleVelocity(vB).y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20div\x20=\x200.5\x20*\x20(R\x20-\x20L\x20+\x20T\x20-\x20B);\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(div,\x200.0,\x200.0,\x201.0);\x0a\x20\x20\x20\x20}\x0a','OES_texture_half_float','VELOCITY_DISSIPATION','5005IbueNv','aspectRatio','RGBA','linkProgram','bindBuffer','write','dissipation','getExtension'];_0x1382=function(){return _0xc06ba3;};return _0x1382();}(function(_0x6492e7,_0x402024){const _0x4c5443=_0x75e4,_0x15e662=_0x6492e7();while(!![]){try{const _0x4d31ff=parseInt(_0x4c5443(0xdf))/0x1+parseInt(_0x4c5443(0x8a))/0x2*(-parseInt(_0x4c5443(0xa1))/0x3)+-parseInt(_0x4c5443(0xe9))/0x4*(-parseInt(_0x4c5443(0x81))/0x5)+-parseInt(_0x4c5443(0xba))/0x6*(parseInt(_0x4c5443(0xbf))/0x7)+parseInt(_0x4c5443(0xe6))/0x8*(parseInt(_0x4c5443(0x98))/0x9)+-parseInt(_0x4c5443(0xf3))/0xa*(-parseInt(_0x4c5443(0xf4))/0xb)+-parseInt(_0x4c5443(0x97))/0xc;if(_0x4d31ff===_0x402024)break;else _0x15e662['push'](_0x15e662['shift']());}catch(_0x31dca5){_0x15e662['push'](_0x15e662['shift']());}}}(_0x1382,0x60e61));const canvas=document[_0x531d2f(0xad)](_0x531d2f(0xde));canvas[_0x531d2f(0xe3)]=canvas[_0x531d2f(0xd5)],canvas[_0x531d2f(0xd1)]=canvas[_0x531d2f(0xb8)];let config={'TEXTURE_DOWNSAMPLE':0x1,'DENSITY_DISSIPATION':0.98,'VELOCITY_DISSIPATION':0.99,'PRESSURE_DISSIPATION':0.8,'PRESSURE_ITERATIONS':0x19,'CURL':0x1c,'SPLAT_RADIUS':0.004},pointers=[],splatStack=[];const {gl,ext}=getWebGLContext(canvas);function getWebGLContext(_0x295ae0){const _0x4d7b62=_0x531d2f,_0x192b64={'alpha':!![],'depth':![],'stencil':![],'antialias':![]};let _0x3d2eb1=_0x295ae0['getContext'](_0x4d7b62(0xdb),_0x192b64);const _0x5031e9=!!_0x3d2eb1;if(!_0x5031e9)_0x3d2eb1=_0x295ae0['getContext'](_0x4d7b62(0x96),_0x192b64)||_0x295ae0[_0x4d7b62(0x7b)](_0x4d7b62(0xaf),_0x192b64);let _0x109295,_0x2c137c;_0x5031e9?(_0x3d2eb1['getExtension'](_0x4d7b62(0xb2)),_0x2c137c=_0x3d2eb1[_0x4d7b62(0x88)](_0x4d7b62(0x6f))):(_0x109295=_0x3d2eb1[_0x4d7b62(0x88)](_0x4d7b62(0x7f)),_0x2c137c=_0x3d2eb1[_0x4d7b62(0x88)](_0x4d7b62(0xca)));_0x3d2eb1[_0x4d7b62(0xc1)](0x0,0x0,0x0,0.2);const _0xa6c8b1=_0x5031e9?_0x3d2eb1[_0x4d7b62(0x6e)]:_0x109295[_0x4d7b62(0xab)];let _0x26c435,_0x1bfa61,_0x31ba58;return _0x5031e9?(_0x26c435=getSupportedFormat(_0x3d2eb1,_0x3d2eb1['RGBA16F'],_0x3d2eb1[_0x4d7b62(0x83)],_0xa6c8b1),_0x1bfa61=getSupportedFormat(_0x3d2eb1,_0x3d2eb1[_0x4d7b62(0x77)],_0x3d2eb1['RG'],_0xa6c8b1),_0x31ba58=getSupportedFormat(_0x3d2eb1,_0x3d2eb1['R16F'],_0x3d2eb1['RED'],_0xa6c8b1)):(_0x26c435=getSupportedFormat(_0x3d2eb1,_0x3d2eb1['RGBA'],_0x3d2eb1['RGBA'],_0xa6c8b1),_0x1bfa61=getSupportedFormat(_0x3d2eb1,_0x3d2eb1[_0x4d7b62(0x83)],_0x3d2eb1[_0x4d7b62(0x83)],_0xa6c8b1),_0x31ba58=getSupportedFormat(_0x3d2eb1,_0x3d2eb1[_0x4d7b62(0x83)],_0x3d2eb1[_0x4d7b62(0x83)],_0xa6c8b1)),{'gl':_0x3d2eb1,'ext':{'formatRGBA':_0x26c435,'formatRG':_0x1bfa61,'formatR':_0x31ba58,'halfFloatTexType':_0xa6c8b1,'supportLinearFiltering':_0x2c137c}};}function getSupportedFormat(_0x2e630b,_0x17b55e,_0xfd8b02,_0x493ae5){const _0x545f26=_0x531d2f;if(!supportRenderTextureFormat(_0x2e630b,_0x17b55e,_0xfd8b02,_0x493ae5))switch(_0x17b55e){case _0x2e630b[_0x545f26(0x6c)]:return getSupportedFormat(_0x2e630b,_0x2e630b[_0x545f26(0x77)],_0x2e630b['RG'],_0x493ae5);case _0x2e630b[_0x545f26(0x77)]:return getSupportedFormat(_0x2e630b,_0x2e630b['RGBA16F'],_0x2e630b[_0x545f26(0x83)],_0x493ae5);default:return null;}return{'internalFormat':_0x17b55e,'format':_0xfd8b02};}function supportRenderTextureFormat(_0x4d73ea,_0x59eceb,_0x2eba7f,_0x3901b9){const _0x5a0957=_0x531d2f;let _0x27ff6a=_0x4d73ea[_0x5a0957(0xcf)]();_0x4d73ea['bindTexture'](_0x4d73ea['TEXTURE_2D'],_0x27ff6a),_0x4d73ea[_0x5a0957(0x78)](_0x4d73ea[_0x5a0957(0xd7)],_0x4d73ea[_0x5a0957(0x7d)],_0x4d73ea[_0x5a0957(0xc4)]),_0x4d73ea[_0x5a0957(0x78)](_0x4d73ea[_0x5a0957(0xd7)],_0x4d73ea[_0x5a0957(0x71)],_0x4d73ea[_0x5a0957(0xc4)]),_0x4d73ea[_0x5a0957(0x78)](_0x4d73ea[_0x5a0957(0xd7)],_0x4d73ea[_0x5a0957(0xec)],_0x4d73ea['CLAMP_TO_EDGE']),_0x4d73ea[_0x5a0957(0x78)](_0x4d73ea['TEXTURE_2D'],_0x4d73ea[_0x5a0957(0xcb)],_0x4d73ea['CLAMP_TO_EDGE']),_0x4d73ea['texImage2D'](_0x4d73ea['TEXTURE_2D'],0x0,_0x59eceb,0x4,0x4,0x0,_0x2eba7f,_0x3901b9,null);let _0x589b22=_0x4d73ea[_0x5a0957(0x92)]();_0x4d73ea[_0x5a0957(0xc9)](_0x4d73ea[_0x5a0957(0x9e)],_0x589b22),_0x4d73ea[_0x5a0957(0xcc)](_0x4d73ea['FRAMEBUFFER'],_0x4d73ea['COLOR_ATTACHMENT0'],_0x4d73ea[_0x5a0957(0xd7)],_0x27ff6a,0x0);const _0x10cad3=_0x4d73ea['checkFramebufferStatus'](_0x4d73ea[_0x5a0957(0x9e)]);if(_0x10cad3!=_0x4d73ea['FRAMEBUFFER_COMPLETE'])return![];return!![];}function pointerPrototype(){const _0x508d7b=_0x531d2f;this['id']=-0x1,this['x']=0x0,this['y']=0x0,this['dx']=0x0,this['dy']=0x0,this[_0x508d7b(0x66)]=![],this[_0x508d7b(0xc7)]=![],this['color']=[0x1e,0x0,0x12c];}pointers['push'](new pointerPrototype());class GLProgram{constructor(_0x8512ac,_0x3290dd){const _0xe02cb4=_0x531d2f;this[_0xe02cb4(0x8f)]={},this[_0xe02cb4(0xda)]=gl[_0xe02cb4(0xb9)](),gl[_0xe02cb4(0xc0)](this[_0xe02cb4(0xda)],_0x8512ac),gl[_0xe02cb4(0xc0)](this['program'],_0x3290dd),gl[_0xe02cb4(0x84)](this[_0xe02cb4(0xda)]);if(!gl['getProgramParameter'](this[_0xe02cb4(0xda)],gl[_0xe02cb4(0xa9)]))throw gl[_0xe02cb4(0xeb)](this['program']);const _0x81156f=gl[_0xe02cb4(0xea)](this[_0xe02cb4(0xda)],gl['ACTIVE_UNIFORMS']);for(let _0x3fc797=0x0;_0x3fc797<_0x81156f;_0x3fc797++){const _0x3ab285=gl[_0xe02cb4(0xf5)](this[_0xe02cb4(0xda)],_0x3fc797)[_0xe02cb4(0xc8)];this[_0xe02cb4(0x8f)][_0x3ab285]=gl[_0xe02cb4(0xcd)](this[_0xe02cb4(0xda)],_0x3ab285);}}[_0x531d2f(0xd8)](){const _0x4af8e6=_0x531d2f;gl[_0x4af8e6(0xa4)](this[_0x4af8e6(0xda)]);}}function compileShader(_0x20d5b6,_0xfa332f){const _0x4b3605=_0x531d2f,_0x453747=gl[_0x4b3605(0x91)](_0x20d5b6);gl['shaderSource'](_0x453747,_0xfa332f),gl[_0x4b3605(0xd2)](_0x453747);if(!gl[_0x4b3605(0x8b)](_0x453747,gl[_0x4b3605(0x9d)]))throw gl[_0x4b3605(0xf1)](_0x453747);return _0x453747;};const baseVertexShader=compileShader(gl[_0x531d2f(0xed)],'\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20sampler2D;\x0a\x0a\x20\x20\x20\x20attribute\x20vec2\x20aPosition;\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20varying\x20vec2\x20vL;\x0a\x20\x20\x20\x20varying\x20vec2\x20vR;\x0a\x20\x20\x20\x20varying\x20vec2\x20vT;\x0a\x20\x20\x20\x20varying\x20vec2\x20vB;\x0a\x20\x20\x20\x20uniform\x20vec2\x20texelSize;\x0a\x0a\x20\x20\x20\x20void\x20main\x20()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vUv\x20=\x20aPosition\x20*\x200.5\x20+\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vL\x20=\x20vUv\x20-\x20vec2(texelSize.x,\x200.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vR\x20=\x20vUv\x20+\x20vec2(texelSize.x,\x200.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vT\x20=\x20vUv\x20+\x20vec2(0.0,\x20texelSize.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vB\x20=\x20vUv\x20-\x20vec2(0.0,\x20texelSize.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20vec4(aPosition,\x200.0,\x201.0);\x0a\x20\x20\x20\x20}\x0a'),clearShader=compileShader(gl[_0x531d2f(0xc2)],_0x531d2f(0xd4)),displayShader=compileShader(gl['FRAGMENT_SHADER'],'\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20sampler2D;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uTexture;\x0a\x0a\x20\x20\x20\x20void\x20main\x20()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20texture2D(uTexture,\x20vUv);\x0a\x20\x20\x20\x20}\x0a'),splatShader=compileShader(gl['FRAGMENT_SHADER'],_0x531d2f(0x8d)),advectionManualFilteringShader=compileShader(gl[_0x531d2f(0xc2)],'\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20sampler2D;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uVelocity;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uSource;\x0a\x20\x20\x20\x20uniform\x20vec2\x20texelSize;\x0a\x20\x20\x20\x20uniform\x20float\x20dt;\x0a\x20\x20\x20\x20uniform\x20float\x20dissipation;\x0a\x0a\x20\x20\x20\x20vec4\x20bilerp\x20(in\x20sampler2D\x20sam,\x20in\x20vec2\x20p)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20st;\x0a\x20\x20\x20\x20\x20\x20\x20\x20st.xy\x20=\x20floor(p\x20-\x200.5)\x20+\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20st.zw\x20=\x20st.xy\x20+\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20uv\x20=\x20st\x20*\x20texelSize.xyxy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20a\x20=\x20texture2D(sam,\x20uv.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20b\x20=\x20texture2D(sam,\x20uv.zy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20c\x20=\x20texture2D(sam,\x20uv.xw);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20d\x20=\x20texture2D(sam,\x20uv.zw);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20f\x20=\x20p\x20-\x20st.xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20mix(mix(a,\x20b,\x20f.x),\x20mix(c,\x20d,\x20f.x),\x20f.y);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20main\x20()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20coord\x20=\x20gl_FragCoord.xy\x20-\x20dt\x20*\x20texture2D(uVelocity,\x20vUv).xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20dissipation\x20*\x20bilerp(uSource,\x20coord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor.a\x20=\x201.0;\x0a\x20\x20\x20\x20}\x0a'),advectionShader=compileShader(gl[_0x531d2f(0xc2)],'\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20sampler2D;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uVelocity;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uSource;\x0a\x20\x20\x20\x20uniform\x20vec2\x20texelSize;\x0a\x20\x20\x20\x20uniform\x20float\x20dt;\x0a\x20\x20\x20\x20uniform\x20float\x20dissipation;\x0a\x0a\x20\x20\x20\x20void\x20main\x20()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20coord\x20=\x20vUv\x20-\x20dt\x20*\x20texture2D(uVelocity,\x20vUv).xy\x20*\x20texelSize;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20dissipation\x20*\x20texture2D(uSource,\x20coord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor.a\x20=\x201.0;\x0a\x20\x20\x20\x20}\x0a'),divergenceShader=compileShader(gl[_0x531d2f(0xc2)],_0x531d2f(0x7e)),curlShader=compileShader(gl[_0x531d2f(0xc2)],_0x531d2f(0xdc)),vorticityShader=compileShader(gl[_0x531d2f(0xc2)],_0x531d2f(0xee)),pressureShader=compileShader(gl[_0x531d2f(0xc2)],'\x0a\x20\x20\x20\x20precision\x20highp\x20float;\x0a\x20\x20\x20\x20precision\x20mediump\x20sampler2D;\x0a\x0a\x20\x20\x20\x20varying\x20vec2\x20vUv;\x0a\x20\x20\x20\x20varying\x20vec2\x20vL;\x0a\x20\x20\x20\x20varying\x20vec2\x20vR;\x0a\x20\x20\x20\x20varying\x20vec2\x20vT;\x0a\x20\x20\x20\x20varying\x20vec2\x20vB;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uPressure;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uDivergence;\x0a\x0a\x20\x20\x20\x20vec2\x20boundary\x20(in\x20vec2\x20uv)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20uv\x20=\x20min(max(uv,\x200.0),\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20uv;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20main\x20()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20L\x20=\x20texture2D(uPressure,\x20boundary(vL)).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20R\x20=\x20texture2D(uPressure,\x20boundary(vR)).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20T\x20=\x20texture2D(uPressure,\x20boundary(vT)).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20B\x20=\x20texture2D(uPressure,\x20boundary(vB)).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20C\x20=\x20texture2D(uPressure,\x20vUv).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20divergence\x20=\x20texture2D(uDivergence,\x20vUv).x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20pressure\x20=\x20(L\x20+\x20R\x20+\x20B\x20+\x20T\x20-\x20divergence)\x20*\x200.25;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(pressure,\x200.0,\x200.0,\x201.0);\x0a\x20\x20\x20\x20}\x0a'),gradientSubtractShader=compileShader(gl[_0x531d2f(0xc2)],_0x531d2f(0x7a));let textureWidth,textureHeight,density,velocity,divergence,curl,pressure;initFramebuffers();const clearProgram=new GLProgram(baseVertexShader,clearShader),displayProgram=new GLProgram(baseVertexShader,displayShader),splatProgram=new GLProgram(baseVertexShader,splatShader),advectionProgram=new GLProgram(baseVertexShader,ext[_0x531d2f(0x79)]?advectionShader:advectionManualFilteringShader),divergenceProgram=new GLProgram(baseVertexShader,divergenceShader),curlProgram=new GLProgram(baseVertexShader,curlShader),vorticityProgram=new GLProgram(baseVertexShader,vorticityShader),pressureProgram=new GLProgram(baseVertexShader,pressureShader),gradienSubtractProgram=new GLProgram(baseVertexShader,gradientSubtractShader);function initFramebuffers(){const _0xa4ccd7=_0x531d2f;textureWidth=gl[_0xa4ccd7(0xd9)]>>config['TEXTURE_DOWNSAMPLE'],textureHeight=gl[_0xa4ccd7(0x93)]>>config['TEXTURE_DOWNSAMPLE'];const _0x22b6dc=ext[_0xa4ccd7(0x69)],_0x4eca16=ext[_0xa4ccd7(0xe7)],_0x5c7565=ext[_0xa4ccd7(0xa7)],_0x167881=ext[_0xa4ccd7(0x65)];density=createDoubleFBO(0x2,textureWidth,textureHeight,_0x4eca16['internalFormat'],_0x4eca16[_0xa4ccd7(0xbc)],_0x22b6dc,ext[_0xa4ccd7(0x79)]?gl[_0xa4ccd7(0x9b)]:gl[_0xa4ccd7(0xc4)]),velocity=createDoubleFBO(0x0,textureWidth,textureHeight,_0x5c7565[_0xa4ccd7(0x6d)],_0x5c7565[_0xa4ccd7(0xbc)],_0x22b6dc,ext[_0xa4ccd7(0x79)]?gl[_0xa4ccd7(0x9b)]:gl[_0xa4ccd7(0xc4)]),divergence=createFBO(0x4,textureWidth,textureHeight,_0x167881[_0xa4ccd7(0x6d)],_0x167881[_0xa4ccd7(0xbc)],_0x22b6dc,gl[_0xa4ccd7(0xc4)]),curl=createFBO(0x5,textureWidth,textureHeight,_0x167881['internalFormat'],_0x167881[_0xa4ccd7(0xbc)],_0x22b6dc,gl['NEAREST']),pressure=createDoubleFBO(0x6,textureWidth,textureHeight,_0x167881['internalFormat'],_0x167881['format'],_0x22b6dc,gl[_0xa4ccd7(0xc4)]);}function createFBO(_0x1c9f17,_0xaf7d95,_0x556bb9,_0x31ca7b,_0x37c71e,_0x357edf,_0x2f0b29){const _0x1630df=_0x531d2f;gl['activeTexture'](gl[_0x1630df(0xc6)]+_0x1c9f17);let _0x2bcc42=gl['createTexture']();gl[_0x1630df(0xd3)](gl[_0x1630df(0xd7)],_0x2bcc42),gl[_0x1630df(0x78)](gl['TEXTURE_2D'],gl[_0x1630df(0x7d)],_0x2f0b29),gl[_0x1630df(0x78)](gl[_0x1630df(0xd7)],gl[_0x1630df(0x71)],_0x2f0b29),gl[_0x1630df(0x78)](gl[_0x1630df(0xd7)],gl[_0x1630df(0xec)],gl[_0x1630df(0xb7)]),gl['texParameteri'](gl[_0x1630df(0xd7)],gl[_0x1630df(0xcb)],gl['CLAMP_TO_EDGE']),gl[_0x1630df(0xb4)](gl['TEXTURE_2D'],0x0,_0x31ca7b,_0xaf7d95,_0x556bb9,0x0,_0x37c71e,_0x357edf,null);let _0x4c05d6=gl[_0x1630df(0x92)]();return gl[_0x1630df(0xc9)](gl[_0x1630df(0x9e)],_0x4c05d6),gl[_0x1630df(0xcc)](gl['FRAMEBUFFER'],gl[_0x1630df(0x99)],gl[_0x1630df(0xd7)],_0x2bcc42,0x0),gl['viewport'](0x0,0x0,_0xaf7d95,_0x556bb9),gl[_0x1630df(0xbe)](gl[_0x1630df(0x8c)]),[_0x2bcc42,_0x4c05d6,_0x1c9f17];}function createDoubleFBO(_0x1f8195,_0x2e04e8,_0x2eb110,_0x5ef826,_0x4d7dc2,_0x1001ef,_0x406776){let _0x44f911=createFBO(_0x1f8195,_0x2e04e8,_0x2eb110,_0x5ef826,_0x4d7dc2,_0x1001ef,_0x406776),_0x2c256d=createFBO(_0x1f8195+0x1,_0x2e04e8,_0x2eb110,_0x5ef826,_0x4d7dc2,_0x1001ef,_0x406776);return{get 'read'(){return _0x44f911;},get 'write'(){return _0x2c256d;},'swap'(){let _0x542ee5=_0x44f911;_0x44f911=_0x2c256d,_0x2c256d=_0x542ee5;}};}function _0x75e4(_0x43ea7c,_0x213a13){const _0x1382b6=_0x1382();return _0x75e4=function(_0x75e40d,_0x4cdaa8){_0x75e40d=_0x75e40d-0x65;let _0x19ea52=_0x1382b6[_0x75e40d];return _0x19ea52;},_0x75e4(_0x43ea7c,_0x213a13);}const blit=((()=>{const _0x3d20eb=_0x531d2f;return gl['bindBuffer'](gl[_0x3d20eb(0x8e)],gl[_0x3d20eb(0xb5)]()),gl[_0x3d20eb(0x74)](gl['ARRAY_BUFFER'],new Float32Array([-0x1,-0x1,-0x1,0x1,0x1,0x1,0x1,-0x1]),gl[_0x3d20eb(0xae)]),gl[_0x3d20eb(0x85)](gl[_0x3d20eb(0x76)],gl['createBuffer']()),gl[_0x3d20eb(0x74)](gl['ELEMENT_ARRAY_BUFFER'],new Uint16Array([0x0,0x1,0x2,0x0,0x2,0x3]),gl['STATIC_DRAW']),gl[_0x3d20eb(0xd6)](0x0,0x2,gl[_0x3d20eb(0x9c)],![],0x0,0x0),gl[_0x3d20eb(0xb3)](0x0),_0x2e2e40=>{const _0x2375bd=_0x3d20eb;gl[_0x2375bd(0xc9)](gl['FRAMEBUFFER'],_0x2e2e40),gl['drawElements'](gl['TRIANGLES'],0x6,gl['UNSIGNED_SHORT'],0x0);};})());let lastTime=Date['now']();multipleSplats(parseInt(Math[_0x531d2f(0xf0)]()*0x14)+0x5),update();function update(){const _0x4186c5=_0x531d2f;resizeCanvas();const _0x522272=Math[_0x4186c5(0xa0)]((Date[_0x4186c5(0xac)]()-lastTime)/0x3e8,0.016);lastTime=Date[_0x4186c5(0xac)](),gl[_0x4186c5(0xd0)](0x0,0x0,textureWidth,textureHeight);if(splatStack[_0x4186c5(0xbd)]>0x0)multipleSplats(splatStack[_0x4186c5(0x6b)]());advectionProgram['bind'](),gl[_0x4186c5(0xef)](advectionProgram['uniforms'][_0x4186c5(0x7c)],0x1/textureWidth,0x1/textureHeight),gl['uniform1i'](advectionProgram[_0x4186c5(0x8f)][_0x4186c5(0xe4)],velocity[_0x4186c5(0xb1)][0x2]),gl[_0x4186c5(0xce)](advectionProgram['uniforms'][_0x4186c5(0x90)],velocity[_0x4186c5(0xb1)][0x2]),gl[_0x4186c5(0xa6)](advectionProgram['uniforms']['dt'],_0x522272),gl[_0x4186c5(0xa6)](advectionProgram['uniforms'][_0x4186c5(0x87)],config[_0x4186c5(0x80)]),blit(velocity[_0x4186c5(0x86)][0x1]),velocity['swap'](),gl[_0x4186c5(0xce)](advectionProgram['uniforms'][_0x4186c5(0xe4)],velocity[_0x4186c5(0xb1)][0x2]),gl['uniform1i'](advectionProgram['uniforms'][_0x4186c5(0x90)],density['read'][0x2]),gl['uniform1f'](advectionProgram[_0x4186c5(0x8f)][_0x4186c5(0x87)],config[_0x4186c5(0xa3)]),blit(density[_0x4186c5(0x86)][0x1]),density[_0x4186c5(0x95)]();for(let _0x328745=0x0;_0x328745<pointers[_0x4186c5(0xbd)];_0x328745++){const _0x4c8a28=pointers[_0x328745];_0x4c8a28[_0x4186c5(0xc7)]&&(splat(_0x4c8a28['x'],_0x4c8a28['y'],_0x4c8a28['dx'],_0x4c8a28['dy'],_0x4c8a28[_0x4186c5(0xe2)]),_0x4c8a28[_0x4186c5(0xc7)]=![]);}curlProgram[_0x4186c5(0xd8)](),gl[_0x4186c5(0xef)](curlProgram[_0x4186c5(0x8f)][_0x4186c5(0x7c)],0x1/textureWidth,0x1/textureHeight),gl['uniform1i'](curlProgram[_0x4186c5(0x8f)]['uVelocity'],velocity[_0x4186c5(0xb1)][0x2]),blit(curl[0x1]),vorticityProgram[_0x4186c5(0xd8)](),gl[_0x4186c5(0xef)](vorticityProgram['uniforms'][_0x4186c5(0x7c)],0x1/textureWidth,0x1/textureHeight),gl[_0x4186c5(0xce)](vorticityProgram[_0x4186c5(0x8f)][_0x4186c5(0xe4)],velocity[_0x4186c5(0xb1)][0x2]),gl[_0x4186c5(0xce)](vorticityProgram[_0x4186c5(0x8f)][_0x4186c5(0xc3)],curl[0x2]),gl['uniform1f'](vorticityProgram['uniforms']['curl'],config[_0x4186c5(0x94)]),gl[_0x4186c5(0xa6)](vorticityProgram[_0x4186c5(0x8f)]['dt'],_0x522272),blit(velocity[_0x4186c5(0x86)][0x1]),velocity[_0x4186c5(0x95)](),divergenceProgram['bind'](),gl['uniform2f'](divergenceProgram[_0x4186c5(0x8f)][_0x4186c5(0x7c)],0x1/textureWidth,0x1/textureHeight),gl[_0x4186c5(0xce)](divergenceProgram[_0x4186c5(0x8f)]['uVelocity'],velocity[_0x4186c5(0xb1)][0x2]),blit(divergence[0x1]),clearProgram['bind']();let _0x47c184=pressure[_0x4186c5(0xb1)][0x2];gl['activeTexture'](gl[_0x4186c5(0xc6)]+_0x47c184),gl['bindTexture'](gl['TEXTURE_2D'],pressure['read'][0x0]),gl[_0x4186c5(0xce)](clearProgram[_0x4186c5(0x8f)][_0x4186c5(0xa8)],_0x47c184),gl[_0x4186c5(0xa6)](clearProgram[_0x4186c5(0x8f)][_0x4186c5(0x75)],config['PRESSURE_DISSIPATION']),blit(pressure[_0x4186c5(0x86)][0x1]),pressure[_0x4186c5(0x95)](),pressureProgram[_0x4186c5(0xd8)](),gl[_0x4186c5(0xef)](pressureProgram[_0x4186c5(0x8f)]['texelSize'],0x1/textureWidth,0x1/textureHeight),gl[_0x4186c5(0xce)](pressureProgram[_0x4186c5(0x8f)][_0x4186c5(0x70)],divergence[0x2]),_0x47c184=pressure[_0x4186c5(0xb1)][0x2],gl[_0x4186c5(0xce)](pressureProgram[_0x4186c5(0x8f)]['uPressure'],_0x47c184),gl[_0x4186c5(0x68)](gl[_0x4186c5(0xc6)]+_0x47c184);for(let _0x4522b8=0x0;_0x4522b8<config[_0x4186c5(0x9f)];_0x4522b8++){gl[_0x4186c5(0xd3)](gl[_0x4186c5(0xd7)],pressure[_0x4186c5(0xb1)][0x0]),blit(pressure[_0x4186c5(0x86)][0x1]),pressure['swap']();}gradienSubtractProgram[_0x4186c5(0xd8)](),gl[_0x4186c5(0xef)](gradienSubtractProgram[_0x4186c5(0x8f)][_0x4186c5(0x7c)],0x1/textureWidth,0x1/textureHeight),gl[_0x4186c5(0xce)](gradienSubtractProgram['uniforms'][_0x4186c5(0xf2)],pressure['read'][0x2]),gl[_0x4186c5(0xce)](gradienSubtractProgram[_0x4186c5(0x8f)][_0x4186c5(0xe4)],velocity['read'][0x2]),blit(velocity[_0x4186c5(0x86)][0x1]),velocity[_0x4186c5(0x95)](),gl[_0x4186c5(0xd0)](0x0,0x0,gl[_0x4186c5(0xd9)],gl['drawingBufferHeight']),displayProgram[_0x4186c5(0xd8)](),gl[_0x4186c5(0xce)](displayProgram[_0x4186c5(0x8f)][_0x4186c5(0xa8)],density['read'][0x2]),blit(null),requestAnimationFrame(update);}function splat(_0x452ee1,_0x4a8929,_0x31c8f4,_0x2db6d5,_0x5285a8){const _0x14ae86=_0x531d2f;splatProgram['bind'](),gl[_0x14ae86(0xce)](splatProgram[_0x14ae86(0x8f)]['uTarget'],velocity[_0x14ae86(0xb1)][0x2]),gl['uniform1f'](splatProgram['uniforms'][_0x14ae86(0x82)],canvas[_0x14ae86(0xe3)]/canvas[_0x14ae86(0xd1)]),gl[_0x14ae86(0xef)](splatProgram[_0x14ae86(0x8f)][_0x14ae86(0xc5)],_0x452ee1/canvas[_0x14ae86(0xe3)],0x1-_0x4a8929/canvas[_0x14ae86(0xd1)]),gl['uniform3f'](splatProgram[_0x14ae86(0x8f)][_0x14ae86(0xe2)],_0x31c8f4,-_0x2db6d5,0x1),gl[_0x14ae86(0xa6)](splatProgram[_0x14ae86(0x8f)][_0x14ae86(0xa5)],config[_0x14ae86(0x67)]),blit(velocity[_0x14ae86(0x86)][0x1]),velocity[_0x14ae86(0x95)](),gl[_0x14ae86(0xce)](splatProgram['uniforms'][_0x14ae86(0xe5)],density['read'][0x2]),gl[_0x14ae86(0x9a)](splatProgram[_0x14ae86(0x8f)][_0x14ae86(0xe2)],_0x5285a8[0x0]*0.3,_0x5285a8[0x1]*0.3,_0x5285a8[0x2]*0.3),blit(density['write'][0x1]),density['swap']();}function multipleSplats(_0x43092a){const _0x432fc8=_0x531d2f;for(let _0x23c9ce=0x0;_0x23c9ce<_0x43092a;_0x23c9ce++){const _0xb2fe59=[Math[_0x432fc8(0xf0)]()*0xa,Math[_0x432fc8(0xf0)]()*0xa,Math[_0x432fc8(0xf0)]()*0xa],_0x37af42=canvas[_0x432fc8(0xe3)]*Math[_0x432fc8(0xf0)](),_0x15b7ea=canvas[_0x432fc8(0xd1)]*Math[_0x432fc8(0xf0)](),_0x3d56a8=0x3e8*(Math[_0x432fc8(0xf0)]()-0.5),_0x458ff2=0x3e8*(Math['random']()-0.5);splat(_0x37af42,_0x15b7ea,_0x3d56a8,_0x458ff2,_0xb2fe59);}}function resizeCanvas(){const _0x23e48c=_0x531d2f;(canvas[_0x23e48c(0xe3)]!=canvas[_0x23e48c(0xd5)]||canvas['height']!=canvas[_0x23e48c(0xb8)])&&(canvas['width']=canvas[_0x23e48c(0xd5)],canvas[_0x23e48c(0xd1)]=canvas[_0x23e48c(0xb8)],initFramebuffers());}canvas[_0x531d2f(0xb0)](_0x531d2f(0x6a),_0x52a17f=>{const _0x2f8459=_0x531d2f;pointers[0x0][_0x2f8459(0xc7)]=pointers[0x0][_0x2f8459(0x66)],pointers[0x0]['dx']=(_0x52a17f[_0x2f8459(0xbb)]-pointers[0x0]['x'])*0xa,pointers[0x0]['dy']=(_0x52a17f[_0x2f8459(0xe0)]-pointers[0x0]['y'])*0xa,pointers[0x0]['x']=_0x52a17f[_0x2f8459(0xbb)],pointers[0x0]['y']=_0x52a17f[_0x2f8459(0xe0)];}),canvas[_0x531d2f(0xb0)](_0x531d2f(0x72),_0x860845=>{const _0x12249d=_0x531d2f;_0x860845[_0x12249d(0xb6)]();const _0x2598e1=_0x860845[_0x12249d(0x73)];for(let _0x43d510=0x0;_0x43d510<_0x2598e1[_0x12249d(0xbd)];_0x43d510++){let _0xdf2478=pointers[_0x43d510];_0xdf2478[_0x12249d(0xc7)]=_0xdf2478[_0x12249d(0x66)],_0xdf2478['dx']=(_0x2598e1[_0x43d510][_0x12249d(0xa2)]-_0xdf2478['x'])*0xa,_0xdf2478['dy']=(_0x2598e1[_0x43d510][_0x12249d(0x89)]-_0xdf2478['y'])*0xa,_0xdf2478['x']=_0x2598e1[_0x43d510][_0x12249d(0xa2)],_0xdf2478['y']=_0x2598e1[_0x43d510][_0x12249d(0x89)];}},![]),canvas['addEventListener'](_0x531d2f(0x6a),()=>{const _0xba3e20=_0x531d2f;pointers[0x0][_0xba3e20(0x66)]=!![],pointers[0x0]['color']=[Math['random']()+0.2,Math[_0xba3e20(0xf0)]()+0.2,Math[_0xba3e20(0xf0)]()+0.2];}),canvas[_0x531d2f(0xb0)](_0x531d2f(0xe1),_0x1fafca=>{const _0x5aa5ab=_0x531d2f;_0x1fafca[_0x5aa5ab(0xb6)]();const _0x36d82e=_0x1fafca[_0x5aa5ab(0x73)];for(let _0x23ab55=0x0;_0x23ab55<_0x36d82e[_0x5aa5ab(0xbd)];_0x23ab55++){if(_0x23ab55>=pointers[_0x5aa5ab(0xbd)])pointers['push'](new pointerPrototype());pointers[_0x23ab55]['id']=_0x36d82e[_0x23ab55]['identifier'],pointers[_0x23ab55][_0x5aa5ab(0x66)]=!![],pointers[_0x23ab55]['x']=_0x36d82e[_0x23ab55][_0x5aa5ab(0xa2)],pointers[_0x23ab55]['y']=_0x36d82e[_0x23ab55][_0x5aa5ab(0x89)],pointers[_0x23ab55]['color']=[Math[_0x5aa5ab(0xf0)]()+0.2,Math[_0x5aa5ab(0xf0)]()+0.2,Math['random']()+0.2];}}),window['addEventListener']('mouseleave',()=>{pointers[0x0]['down']=![];}),window[_0x531d2f(0xb0)](_0x531d2f(0xdd),_0x1e1aa5=>{const _0x19d066=_0x531d2f,_0x55054f=_0x1e1aa5[_0x19d066(0xe8)];for(let _0x28d0a0=0x0;_0x28d0a0<_0x55054f[_0x19d066(0xbd)];_0x28d0a0++)for(let _0x4622f5=0x0;_0x4622f5<pointers[_0x19d066(0xbd)];_0x4622f5++)if(_0x55054f[_0x28d0a0][_0x19d066(0xaa)]==pointers[_0x4622f5]['id'])pointers[_0x4622f5][_0x19d066(0x66)]=![];});